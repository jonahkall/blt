; ModuleID = 'klee_harness.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-f128:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [20 x i8] c"len < (unsigned) -2\00", align 1
@.str1 = private unnamed_addr constant [17 x i8] c"klee_harness.cpp\00", align 1
@_ZZ11print_arrayPjjE19__PRETTY_FUNCTION__ = internal unnamed_addr constant [46 x i8] c"void print_array(unsigned int*, unsigned int)\00", align 32
@.str2 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@llvm.eh.catch.all.value = linkonce unnamed_addr constant i8* null, section "llvm.metadata"
@.str3 = private unnamed_addr constant [3 x i8] c"fs\00", align 1
@.str4 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@_ZZ4mainE19__PRETTY_FUNCTION__ = internal unnamed_addr constant [11 x i8] c"int main()\00"
@llvm.used = appending unnamed_addr global [1 x i8*] [i8* bitcast (i8** @llvm.eh.catch.all.value to i8*)], section "llvm.metadata"

define void @_Z11print_arrayPjj(i32* %a, i32 %len) {
entry:
  %a_addr = alloca i32*, align 8
  %len_addr = alloca i32, align 4
  %save_filt.9 = alloca i32
  %save_eptr.8 = alloca i8*
  %saved_stack.5 = alloca i8*
  %str.0 = alloca [0 x i8]*
  %0 = alloca i64
  %i = alloca i32
  %eh_exception = alloca i8*
  %eh_selector = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  call void @llvm.dbg.declare(metadata !{i32** %a_addr}, metadata !11), !dbg !12
  store i32* %a, i32** %a_addr
  call void @llvm.dbg.declare(metadata !{i32* %len_addr}, metadata !13), !dbg !12
  store i32 %len, i32* %len_addr
  call void @llvm.dbg.declare(metadata !{[0 x i8]** %str.0}, metadata !14), !dbg !20
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !21), !dbg !24
  %1 = call i8* @llvm.stacksave(), !dbg !12
  store i8* %1, i8** %saved_stack.5, align 8, !dbg !12
  %2 = load i32* %len_addr, align 4, !dbg !25
  %3 = icmp ugt i32 %2, -3, !dbg !25
  br i1 %3, label %bb, label %bb1, !dbg !25

bb:                                               ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1, i64 0, i64 0), i32 10, i8* getelementptr inbounds ([46 x i8]* @_ZZ11print_arrayPjjE19__PRETTY_FUNCTION__, i64 0, i64 0)) noreturn nounwind, !dbg !25
  unreachable, !dbg !25

bb1:                                              ; preds = %entry
  %4 = load i32* %len_addr, align 4, !dbg !26
  %5 = add i32 %4, 2, !dbg !26
  %6 = zext i32 %5 to i64, !dbg !26
  %7 = sub nsw i64 %6, 1, !dbg !26
  store i64 %7, i64* %0, align 8, !dbg !26
  %8 = load i64* %0, align 8, !dbg !26
  %9 = load i64* %0, align 8, !dbg !26
  %10 = add i64 %9, 1, !dbg !26
  %11 = mul i64 %10, 8, !dbg !26
  %12 = load i64* %0, align 8, !dbg !26
  %13 = add i64 %12, 1, !dbg !26
  %14 = load i64* %0, align 8, !dbg !26
  %15 = add i64 %14, 1, !dbg !26
  %16 = mul i64 %15, 8, !dbg !26
  %17 = load i64* %0, align 8, !dbg !26
  %18 = add i64 %17, 1, !dbg !26
  %19 = alloca i8, i64 %18, align 1, !dbg !26
  %20 = bitcast i8* %19 to [0 x i8]*, !dbg !26
  store [0 x i8]* %20, [0 x i8]** %str.0, align 8, !dbg !26
  store i32 0, i32* %i, align 4, !dbg !27
  br label %bb3, !dbg !27

bb2:                                              ; preds = %bb3
  %21 = load i32** %a_addr, align 8, !dbg !28
  %22 = load i32* %i, align 4, !dbg !28
  %23 = sext i32 %22 to i64, !dbg !28
  %24 = getelementptr inbounds i32* %21, i64 %23, !dbg !28
  %25 = load i32* %24, align 1, !dbg !28
  %26 = load i32* %i, align 4, !dbg !28
  %27 = load [0 x i8]** %str.0, align 8, !dbg !28
  %28 = sext i32 %26 to i64, !dbg !28
  %29 = getelementptr inbounds [0 x i8]* %27, i64 0, i64 %28, !dbg !28
  %30 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %29, i8* noalias getelementptr inbounds ([3 x i8]* @.str2, i64 0, i64 0), i32 %25) nounwind, !dbg !28
  %31 = load i32* %i, align 4, !dbg !27
  %32 = add nsw i32 %31, 1, !dbg !27
  store i32 %32, i32* %i, align 4, !dbg !27
  br label %bb3, !dbg !27

bb3:                                              ; preds = %bb2, %bb1
  %33 = load i32* %i, align 4, !dbg !27
  %34 = load i32* %len_addr, align 4, !dbg !27
  %35 = icmp ult i32 %33, %34, !dbg !27
  br i1 %35, label %bb2, label %bb4, !dbg !27

bb4:                                              ; preds = %bb3
  %36 = load i32* %i, align 4, !dbg !29
  %37 = load [0 x i8]** %str.0, align 8, !dbg !29
  %38 = sext i32 %36 to i64, !dbg !29
  %39 = getelementptr inbounds [0 x i8]* %37, i64 0, i64 %38, !dbg !29
  store i8 10, i8* %39, align 1, !dbg !29
  %40 = load i32* %i, align 4, !dbg !29
  %41 = add nsw i32 %40, 1, !dbg !29
  store i32 %41, i32* %i, align 4, !dbg !29
  %42 = load i32* %i, align 4, !dbg !30
  %43 = load [0 x i8]** %str.0, align 8, !dbg !30
  %44 = sext i32 %42 to i64, !dbg !30
  %45 = getelementptr inbounds [0 x i8]* %43, i64 0, i64 %44, !dbg !30
  store i8 0, i8* %45, align 1, !dbg !30
  %46 = load [0 x i8]** %str.0, align 8, !dbg !31
  %47 = getelementptr inbounds [0 x i8]* %46, i64 0, i64 0, !dbg !31
  %48 = invoke i32 (i8*, ...)* @printf(i8* noalias %47)
          to label %invcont unwind label %lpad, !dbg !31

invcont:                                          ; preds = %bb4
  %49 = load i8** %saved_stack.5, align 8, !dbg !31
  call void @llvm.stackrestore(i8* %49), !dbg !31
  br label %return, !dbg !32

bb5:                                              ; preds = %ppad
  %eh_select = load i32* %eh_selector, !dbg !32
  store i32 %eh_select, i32* %save_filt.9, align 4, !dbg !32
  %eh_value = load i8** %eh_exception, !dbg !32
  store i8* %eh_value, i8** %save_eptr.8, align 8, !dbg !32
  %50 = load i8** %saved_stack.5, align 8, !dbg !32
  call void @llvm.stackrestore(i8* %50), !dbg !32
  %51 = load i8** %save_eptr.8, align 8, !dbg !32
  store i8* %51, i8** %eh_exception, align 8, !dbg !32
  %52 = load i32* %save_filt.9, align 4, !dbg !32
  store i32 %52, i32* %eh_selector, align 4, !dbg !32
  br label %Unwind, !dbg !32

return:                                           ; preds = %invcont
  ret void, !dbg !32

lpad:                                             ; preds = %bb4
  %eh_ptr = call i8* @llvm.eh.exception(), !dbg !32
  store i8* %eh_ptr, i8** %eh_exception, !dbg !32
  %eh_ptr6 = load i8** %eh_exception, !dbg !32
  %eh_select7 = call i32 (i8*, i8*, ...)* @llvm.eh.selector(i8* %eh_ptr6, i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*), i32 0), !dbg !32
  store i32 %eh_select7, i32* %eh_selector, !dbg !32
  br label %ppad, !dbg !32

ppad:                                             ; preds = %lpad
  br label %bb5, !dbg !32

Unwind:                                           ; preds = %bb5
  %eh_ptr8 = load i8** %eh_exception, !dbg !32
  call void @_Unwind_Resume_or_Rethrow(i8* %eh_ptr8), !dbg !32
  unreachable, !dbg !32
}

declare void @llvm.dbg.declare(metadata, metadata) nounwind readnone

declare i8* @llvm.stacksave() nounwind

declare void @__assert_fail(i8*, i8*, i32, i8*) noreturn nounwind

declare i32 @sprintf(i8* noalias, i8* noalias, ...) nounwind

declare i32 @printf(i8* noalias, ...)

declare void @llvm.stackrestore(i8*) nounwind

declare i8* @llvm.eh.exception() nounwind readonly

declare i32 @llvm.eh.selector(i8*, i8*, ...) nounwind

declare i32 @llvm.eh.typeid.for(i8*) nounwind

declare i32 @__gxx_personality_v0(...)

declare void @_Unwind_Resume_or_Rethrow(i8*)

define i32 @main() {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %fs = alloca [11 x i32]
  %output = alloca [11 x i32]
  %p = alloca i32*
  %old_r = alloca i32
  %new_r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  call void @llvm.dbg.declare(metadata !{[11 x i32]* %fs}, metadata !33), !dbg !39
  call void @llvm.dbg.declare(metadata !{[11 x i32]* %output}, metadata !40), !dbg !41
  call void @llvm.dbg.declare(metadata !{i32** %p}, metadata !42), !dbg !43
  %fs1 = bitcast [11 x i32]* %fs to i8*, !dbg !44
  call void @klee_make_symbolic(i8* %fs1, i64 44, i8* getelementptr inbounds ([3 x i8]* @.str3, i64 0, i64 0)), !dbg !44
  call void @_ZN8old_calc12init_pressedEv(), !dbg !45
  call void @_ZN8new_calc12init_pressedEv(), !dbg !46
  %1 = getelementptr inbounds [11 x i32]* %fs, i64 0, i64 0, !dbg !47
  store i32* %1, i32** %p, align 8, !dbg !47
  br label %bb10, !dbg !47

bb:                                               ; preds = %bb10
  %2 = load i32** %p, align 8, !dbg !48
  %3 = load i32* %2, align 4, !dbg !48
  %4 = icmp ule i32 %3, 4, !dbg !48
  %5 = zext i1 %4 to i64, !dbg !48
  call void @klee_assume(i64 %5), !dbg !48
  %6 = load i32** %p, align 8, !dbg !49
  %7 = ptrtoint i32* %6 to i64, !dbg !49
  %fs2 = ptrtoint [11 x i32]* %fs to i64, !dbg !49
  %8 = sub nsw i64 %7, %fs2, !dbg !49
  %9 = sdiv exact i64 %8, 4, !dbg !49
  %10 = load i32** %p, align 8, !dbg !49
  %11 = load i32* %10, align 4, !dbg !49
  %12 = getelementptr inbounds [11 x i32]* %output, i64 0, i64 %9, !dbg !49
  store i32 %11, i32* %12, align 4, !dbg !49
  %13 = load i32** %p, align 8, !dbg !50
  %14 = load i32* %13, align 4, !dbg !50
  switch i32 %14, label %bb9 [
    i32 0, label %bb4
    i32 1, label %bb5
    i32 2, label %bb6
    i32 3, label %bb7
    i32 4, label %bb8
  ], !dbg !50

bb4:                                              ; preds = %bb
  call void @_ZN8old_calc12zero_pressedEv(), !dbg !51
  call void @_ZN8new_calc12zero_pressedEv(), !dbg !52
  br label %bb9, !dbg !52

bb5:                                              ; preds = %bb
  call void @_ZN8old_calc11one_pressedEv(), !dbg !53
  call void @_ZN8new_calc11one_pressedEv(), !dbg !54
  br label %bb9, !dbg !54

bb6:                                              ; preds = %bb
  call void @_ZN8old_calc12plus_pressedEv(), !dbg !55
  call void @_ZN8new_calc12plus_pressedEv(), !dbg !56
  br label %bb9, !dbg !56

bb7:                                              ; preds = %bb
  call void @_ZN8old_calc12mult_pressedEv(), !dbg !57
  call void @_ZN8new_calc12mult_pressedEv(), !dbg !58
  br label %bb9, !dbg !58

bb8:                                              ; preds = %bb
  call void @llvm.dbg.declare(metadata !{i32* %old_r}, metadata !59), !dbg !61
  call void @llvm.dbg.declare(metadata !{i32* %new_r}, metadata !62), !dbg !63
  %15 = call i32 @_ZN8old_calc12eval_pressedEv(), !dbg !61
  store i32 %15, i32* %old_r, align 4, !dbg !61
  %16 = call i32 @_ZN8new_calc12eval_pressedEv(), !dbg !63
  store i32 %16, i32* %new_r, align 4, !dbg !63
  %17 = load i32* %old_r, align 4, !dbg !64
  %18 = load i32* %new_r, align 4, !dbg !64
  %19 = icmp ne i32 %17, %18, !dbg !64
  br i1 %19, label %FAILURE, label %bb9, !dbg !64

bb9:                                              ; preds = %bb8, %bb7, %bb6, %bb5, %bb4, %bb
  %20 = load i32** %p, align 8, !dbg !47
  %21 = getelementptr inbounds i32* %20, i64 1, !dbg !47
  store i32* %21, i32** %p, align 8, !dbg !47
  br label %bb10, !dbg !47

bb10:                                             ; preds = %bb9, %entry
  %22 = getelementptr inbounds [11 x i32]* %fs, i64 0, i64 11, !dbg !47
  %23 = load i32** %p, align 8, !dbg !47
  %24 = icmp ugt i32* %22, %23, !dbg !47
  br i1 %24, label %bb, label %bb11, !dbg !47

bb11:                                             ; preds = %bb10
  store i32 0, i32* %0, align 4, !dbg !65
  %25 = load i32* %0, align 4, !dbg !65
  store i32 %25, i32* %retval, align 4, !dbg !65
  br label %return, !dbg !65

FAILURE:                                          ; preds = %bb8
  %26 = getelementptr inbounds [11 x i32]* %output, i64 0, i64 0, !dbg !66
  call void @_Z11print_arrayPjj(i32* %26, i32 11), !dbg !66
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8]* @.str4, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1, i64 0, i64 0), i32 66, i8* getelementptr inbounds ([11 x i8]* @_ZZ4mainE19__PRETTY_FUNCTION__, i64 0, i64 0)) noreturn nounwind, !dbg !67
  unreachable, !dbg !67

return:                                           ; preds = %bb11
  %retval12 = load i32* %retval, !dbg !67
  ret i32 %retval12, !dbg !67
}

declare void @klee_make_symbolic(i8*, i64, i8*)

declare void @_ZN8old_calc12init_pressedEv()

declare void @_ZN8new_calc12init_pressedEv()

declare void @klee_assume(i64)

declare void @_ZN8old_calc12zero_pressedEv()

declare void @_ZN8new_calc12zero_pressedEv()

declare void @_ZN8old_calc11one_pressedEv()

declare void @_ZN8new_calc11one_pressedEv()

declare void @_ZN8old_calc12plus_pressedEv()

declare void @_ZN8new_calc12plus_pressedEv()

declare void @_ZN8old_calc12mult_pressedEv()

declare void @_ZN8new_calc12mult_pressedEv()

declare i32 @_ZN8old_calc12eval_pressedEv()

declare i32 @_ZN8new_calc12eval_pressedEv()

!llvm.dbg.sp = !{!0, !7}

!0 = metadata !{i32 589870, i32 0, metadata !1, metadata !"print_array", metadata !"print_array", metadata !"_Z11print_arrayPjj", metadata !1, i32 9, metadata !3, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32*, i32)* @_Z11print_arrayPjj} ; [ DW_TAG_subprogram ]
!1 = metadata !{i32 589865, metadata !"klee_harness.cpp", metadata !"/home/tslilyai/Documents/blt/", metadata !2} ; [ DW_TAG_file_type ]
!2 = metadata !{i32 589841, i32 0, i32 4, metadata !"klee_harness.cpp", metadata !"/home/tslilyai/Documents/blt/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG_compile_unit ]
!3 = metadata !{i32 589845, metadata !1, metadata !"", metadata !1, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4 = metadata !{null, metadata !5, metadata !6}
!5 = metadata !{i32 589839, metadata !1, metadata !"", metadata !1, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !6} ; [ DW_TAG_pointer_type ]
!6 = metadata !{i32 589860, metadata !1, metadata !"unsigned int", metadata !1, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!7 = metadata !{i32 589870, i32 0, metadata !1, metadata !"main", metadata !"main", metadata !"main", metadata !1, i32 20, metadata !8, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 ()* @main} ; [ DW_TAG_subprogram ]
!8 = metadata !{i32 589845, metadata !1, metadata !"", metadata !1, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !9, i32 0, null} ; [ DW_TAG_subroutine_type ]
!9 = metadata !{metadata !10}
!10 = metadata !{i32 589860, metadata !1, metadata !"int", metadata !1, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!11 = metadata !{i32 590081, metadata !0, metadata !"a", metadata !1, i32 9, metadata !5, i32 0} ; [ DW_TAG_arg_variable ]
!12 = metadata !{i32 9, i32 0, metadata !0, null}
!13 = metadata !{i32 590081, metadata !0, metadata !"len", metadata !1, i32 9, metadata !6, i32 0} ; [ DW_TAG_arg_variable ]
!14 = metadata !{i32 590080, metadata !0, metadata !"str.0", metadata !1, i32 11, metadata !15, i32 0} ; [ DW_TAG_auto_variable ]
!15 = metadata !{i32 589839, metadata !1, metadata !"", metadata !1, i32 0, i64 64, i64 64, i64 0, i32 64, metadata !16} ; [ DW_TAG_pointer_type ]
!16 = metadata !{i32 589825, metadata !1, metadata !"", metadata !1, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !17, metadata !18, i32 0, null} ; [ DW_TAG_array_type ]
!17 = metadata !{i32 589860, metadata !1, metadata !"char", metadata !1, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!18 = metadata !{metadata !19}
!19 = metadata !{i32 589857, i64 0, i64 0}        ; [ DW_TAG_subrange_type ]
!20 = metadata !{i32 11, i32 0, metadata !0, null}
!21 = metadata !{i32 590080, metadata !22, metadata !"i", metadata !1, i32 12, metadata !10, i32 0} ; [ DW_TAG_auto_variable ]
!22 = metadata !{i32 589835, metadata !23, i32 9, i32 0, metadata !1, i32 1} ; [ DW_TAG_lexical_block ]
!23 = metadata !{i32 589835, metadata !0, i32 9, i32 0, metadata !1, i32 0} ; [ DW_TAG_lexical_block ]
!24 = metadata !{i32 12, i32 0, metadata !22, null}
!25 = metadata !{i32 10, i32 0, metadata !22, null}
!26 = metadata !{i32 11, i32 0, metadata !22, null}
!27 = metadata !{i32 13, i32 0, metadata !22, null}
!28 = metadata !{i32 14, i32 0, metadata !22, null}
!29 = metadata !{i32 15, i32 0, metadata !22, null}
!30 = metadata !{i32 16, i32 0, metadata !22, null}
!31 = metadata !{i32 17, i32 0, metadata !22, null}
!32 = metadata !{i32 18, i32 0, metadata !22, null}
!33 = metadata !{i32 590080, metadata !34, metadata !"fs", metadata !1, i32 21, metadata !36, i32 0} ; [ DW_TAG_auto_variable ]
!34 = metadata !{i32 589835, metadata !35, i32 23, i32 0, metadata !1, i32 3} ; [ DW_TAG_lexical_block ]
!35 = metadata !{i32 589835, metadata !7, i32 20, i32 0, metadata !1, i32 2} ; [ DW_TAG_lexical_block ]
!36 = metadata !{i32 589825, metadata !1, metadata !"", metadata !1, i32 0, i64 352, i64 32, i64 0, i32 0, metadata !6, metadata !37, i32 0, null} ; [ DW_TAG_array_type ]
!37 = metadata !{metadata !38}
!38 = metadata !{i32 589857, i64 0, i64 10}       ; [ DW_TAG_subrange_type ]
!39 = metadata !{i32 21, i32 0, metadata !34, null}
!40 = metadata !{i32 590080, metadata !34, metadata !"output", metadata !1, i32 22, metadata !36, i32 0} ; [ DW_TAG_auto_variable ]
!41 = metadata !{i32 22, i32 0, metadata !34, null}
!42 = metadata !{i32 590080, metadata !34, metadata !"p", metadata !1, i32 25, metadata !5, i32 0} ; [ DW_TAG_auto_variable ]
!43 = metadata !{i32 25, i32 0, metadata !34, null}
!44 = metadata !{i32 23, i32 0, metadata !34, null}
!45 = metadata !{i32 26, i32 0, metadata !34, null}
!46 = metadata !{i32 27, i32 0, metadata !34, null}
!47 = metadata !{i32 29, i32 0, metadata !34, null}
!48 = metadata !{i32 30, i32 0, metadata !34, null}
!49 = metadata !{i32 31, i32 0, metadata !34, null}
!50 = metadata !{i32 32, i32 0, metadata !34, null}
!51 = metadata !{i32 34, i32 0, metadata !34, null}
!52 = metadata !{i32 35, i32 0, metadata !34, null}
!53 = metadata !{i32 38, i32 0, metadata !34, null}
!54 = metadata !{i32 39, i32 0, metadata !34, null}
!55 = metadata !{i32 42, i32 0, metadata !34, null}
!56 = metadata !{i32 43, i32 0, metadata !34, null}
!57 = metadata !{i32 46, i32 0, metadata !34, null}
!58 = metadata !{i32 47, i32 0, metadata !34, null}
!59 = metadata !{i32 590080, metadata !60, metadata !"old_r", metadata !1, i32 51, metadata !10, i32 0} ; [ DW_TAG_auto_variable ]
!60 = metadata !{i32 589835, metadata !34, i32 51, i32 0, metadata !1, i32 4} ; [ DW_TAG_lexical_block ]
!61 = metadata !{i32 51, i32 0, metadata !60, null}
!62 = metadata !{i32 590080, metadata !60, metadata !"new_r", metadata !1, i32 52, metadata !10, i32 0} ; [ DW_TAG_auto_variable ]
!63 = metadata !{i32 52, i32 0, metadata !60, null}
!64 = metadata !{i32 53, i32 0, metadata !60, null}
!65 = metadata !{i32 62, i32 0, metadata !34, null}
!66 = metadata !{i32 65, i32 0, metadata !34, null}
!67 = metadata !{i32 66, i32 0, metadata !34, null}
