; ModuleID = 'old_calc.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-f128:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

%struct.input = type { i8*, i32, i32 }
%struct.ops = type { i32*, i32, i32 }
%struct.res = type { i32*, i32, i32 }

@_ZL3ops = internal unnamed_addr global %struct.ops zeroinitializer, align 16
@_ZL3res = internal unnamed_addr global %struct.ops zeroinitializer, align 16
@_ZL5input = internal unnamed_addr global %struct.input zeroinitializer, align 16
@.str = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1

define void @_ZN8old_calc12init_pressedEv() {
entry:
  %0 = call noalias i8* @malloc(i64 40) nounwind, !dbg !45
  store i8* %0, i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !45
  %1 = call noalias i8* @malloc(i64 40) nounwind, !dbg !47
  %2 = bitcast i8* %1 to i32*, !dbg !47
  store i32* %2, i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !47
  %3 = call noalias i8* @malloc(i64 40) nounwind, !dbg !48
  %4 = bitcast i8* %3 to i32*, !dbg !48
  store i32* %4, i32** getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 0), align 16, !dbg !48
  store i32 0, i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 1), align 8, !dbg !49
  store i32 0, i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !49
  store i32 0, i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !49
  store i32 10, i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 2), align 4, !dbg !50
  store i32 10, i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 2), align 4, !dbg !50
  store i32 10, i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 2), align 4, !dbg !50
  %5 = load i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !51
  %6 = icmp eq i8* %5, null, !dbg !51
  br i1 %6, label %bb2, label %bb, !dbg !51

bb:                                               ; preds = %entry
  %7 = load i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !51
  %8 = icmp eq i32* %7, null, !dbg !51
  br i1 %8, label %bb2, label %bb1, !dbg !51

bb1:                                              ; preds = %bb
  %9 = load i32** getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 0), align 16, !dbg !51
  %10 = icmp eq i32* %9, null, !dbg !51
  br i1 %10, label %bb2, label %bb3, !dbg !51

bb2:                                              ; preds = %bb1, %bb, %entry
  %11 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr inbounds ([14 x i8]* @.str, i64 0, i64 0)), !dbg !52
  br label %bb3, !dbg !52

bb3:                                              ; preds = %bb2, %bb1
  br label %return, !dbg !53

return:                                           ; preds = %bb3
  ret void, !dbg !53
}

define internal void @_ZL8apply_opv() nounwind {
entry:
  %0 = load i32** getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 0), align 16, !dbg !54
  %1 = load i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !54
  %2 = sub i32 %1, 1, !dbg !54
  %3 = zext i32 %2 to i64, !dbg !54
  %4 = getelementptr inbounds i32* %0, i64 %3, !dbg !54
  %5 = load i32* %4, align 1, !dbg !54
  %6 = icmp eq i32 %5, 42, !dbg !54
  br i1 %6, label %bb, label %bb1, !dbg !54

bb:                                               ; preds = %entry
  %7 = load i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !56
  %8 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !56
  %9 = sub i32 %8, 2, !dbg !56
  %10 = load i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !56
  %11 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !56
  %12 = sub i32 %11, 1, !dbg !56
  %13 = zext i32 %12 to i64, !dbg !56
  %14 = getelementptr inbounds i32* %10, i64 %13, !dbg !56
  %15 = load i32* %14, align 1, !dbg !56
  %16 = load i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !56
  %17 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !56
  %18 = sub i32 %17, 2, !dbg !56
  %19 = zext i32 %18 to i64, !dbg !56
  %20 = getelementptr inbounds i32* %16, i64 %19, !dbg !56
  %21 = load i32* %20, align 1, !dbg !56
  %22 = mul i32 %15, %21, !dbg !56
  %23 = zext i32 %9 to i64, !dbg !56
  %24 = getelementptr inbounds i32* %7, i64 %23, !dbg !56
  store i32 %22, i32* %24, align 1, !dbg !56
  br label %bb2, !dbg !56

bb1:                                              ; preds = %entry
  %25 = load i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !57
  %26 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !57
  %27 = sub i32 %26, 2, !dbg !57
  %28 = load i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !57
  %29 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !57
  %30 = sub i32 %29, 1, !dbg !57
  %31 = zext i32 %30 to i64, !dbg !57
  %32 = getelementptr inbounds i32* %28, i64 %31, !dbg !57
  %33 = load i32* %32, align 1, !dbg !57
  %34 = load i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !57
  %35 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !57
  %36 = sub i32 %35, 2, !dbg !57
  %37 = zext i32 %36 to i64, !dbg !57
  %38 = getelementptr inbounds i32* %34, i64 %37, !dbg !57
  %39 = load i32* %38, align 1, !dbg !57
  %40 = add i32 %33, %39, !dbg !57
  %41 = zext i32 %27 to i64, !dbg !57
  %42 = getelementptr inbounds i32* %25, i64 %41, !dbg !57
  store i32 %40, i32* %42, align 1, !dbg !57
  br label %bb2, !dbg !57

bb2:                                              ; preds = %bb1, %bb
  %43 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !58
  %44 = sub i32 %43, 1, !dbg !58
  store i32 %44, i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !58
  %45 = load i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !59
  %46 = sub i32 %45, 1, !dbg !59
  store i32 %46, i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !59
  br label %return, !dbg !60

return:                                           ; preds = %bb2
  ret void, !dbg !60
}

define internal void @_ZL6add_opc(i8 signext %c) nounwind {
entry:
  %c_addr = alloca i8, align 1
  %"alloca point" = bitcast i32 0 to i32
  call void @llvm.dbg.declare(metadata !{i8* %c_addr}, metadata !61), !dbg !62
  store i8 %c, i8* %c_addr
  %0 = load i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !63
  %1 = load i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 2), align 4, !dbg !63
  %2 = icmp uge i32 %0, %1, !dbg !63
  br i1 %2, label %bb, label %bb1, !dbg !63

bb:                                               ; preds = %entry
  %3 = load i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 2), align 4, !dbg !65
  %4 = zext i32 %3 to i64, !dbg !65
  %5 = mul i64 %4, 8, !dbg !65
  %6 = load i32** getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 0), align 16, !dbg !65
  %7 = bitcast i32* %6 to i8*, !dbg !65
  %8 = call i8* @realloc(i8* %7, i64 %5) nounwind, !dbg !65
  %9 = bitcast i8* %8 to i32*, !dbg !65
  store i32* %9, i32** getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 0), align 16, !dbg !65
  %10 = load i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 2), align 4, !dbg !66
  %11 = mul i32 %10, 2, !dbg !66
  store i32 %11, i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 2), align 4, !dbg !66
  br label %bb1, !dbg !66

bb1:                                              ; preds = %bb, %entry
  %12 = load i32** getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 0), align 16, !dbg !67
  %13 = load i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !67
  %14 = load i8* %c_addr, align 1, !dbg !67
  %15 = sext i8 %14 to i32, !dbg !67
  %16 = zext i32 %13 to i64, !dbg !67
  %17 = getelementptr inbounds i32* %12, i64 %16, !dbg !67
  store i32 %15, i32* %17, align 1, !dbg !67
  %18 = add i32 %13, 1, !dbg !67
  store i32 %18, i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !67
  br label %return, !dbg !68

return:                                           ; preds = %bb1
  ret void, !dbg !68
}

declare void @llvm.dbg.declare(metadata, metadata) nounwind readnone

declare i8* @realloc(i8*, i64) nounwind

define internal void @_ZL7add_resj(i32 %n) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %"alloca point" = bitcast i32 0 to i32
  call void @llvm.dbg.declare(metadata !{i32* %n_addr}, metadata !69), !dbg !70
  store i32 %n, i32* %n_addr
  %0 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !71
  %1 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 2), align 4, !dbg !71
  %2 = icmp uge i32 %0, %1, !dbg !71
  br i1 %2, label %bb, label %bb1, !dbg !71

bb:                                               ; preds = %entry
  %3 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 2), align 4, !dbg !73
  %4 = zext i32 %3 to i64, !dbg !73
  %5 = mul i64 %4, 8, !dbg !73
  %6 = load i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !73
  %7 = bitcast i32* %6 to i8*, !dbg !73
  %8 = call i8* @realloc(i8* %7, i64 %5) nounwind, !dbg !73
  %9 = bitcast i8* %8 to i32*, !dbg !73
  store i32* %9, i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !73
  %10 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 2), align 4, !dbg !74
  %11 = mul i32 %10, 2, !dbg !74
  store i32 %11, i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 2), align 4, !dbg !74
  br label %bb1, !dbg !74

bb1:                                              ; preds = %bb, %entry
  %12 = load i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !75
  %13 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !75
  %14 = zext i32 %13 to i64, !dbg !75
  %15 = getelementptr inbounds i32* %12, i64 %14, !dbg !75
  %16 = load i32* %n_addr, align 4, !dbg !75
  store i32 %16, i32* %15, align 1, !dbg !75
  %17 = add i32 %13, 1, !dbg !75
  store i32 %17, i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !75
  br label %return, !dbg !76

return:                                           ; preds = %bb1
  ret void, !dbg !76
}

define i32 @_ZN8old_calc12eval_pressedEv() nounwind {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %i = alloca i32
  %num = alloca i32
  %opflag = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !77), !dbg !80
  call void @llvm.dbg.declare(metadata !{i32* %num}, metadata !81), !dbg !80
  call void @llvm.dbg.declare(metadata !{i32* %opflag}, metadata !82), !dbg !80
  store i32 0, i32* %i, align 4, !dbg !80
  store i32 0, i32* %num, align 4, !dbg !80
  store i32 0, i32* %opflag, align 4, !dbg !80
  %1 = load i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 1), align 8, !dbg !83
  %2 = icmp eq i32 %1, 0, !dbg !83
  br i1 %2, label %error, label %bb, !dbg !83

bb:                                               ; preds = %entry
  %3 = load i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !83
  %4 = getelementptr inbounds i8* %3, i64 0, !dbg !83
  %5 = load i8* %4, align 1, !dbg !83
  %6 = icmp eq i8 %5, 43, !dbg !83
  br i1 %6, label %error, label %bb1, !dbg !83

bb1:                                              ; preds = %bb
  %7 = load i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !83
  %8 = getelementptr inbounds i8* %7, i64 0, !dbg !83
  %9 = load i8* %8, align 1, !dbg !83
  %10 = icmp eq i8 %9, 42, !dbg !83
  br i1 %10, label %error, label %bb2, !dbg !83

bb2:                                              ; preds = %bb1
  %11 = load i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !83
  %12 = load i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 1), align 8, !dbg !83
  %13 = sub i32 %12, 1, !dbg !83
  %14 = zext i32 %13 to i64, !dbg !83
  %15 = getelementptr inbounds i8* %11, i64 %14, !dbg !83
  %16 = load i8* %15, align 1, !dbg !83
  %17 = icmp eq i8 %16, 43, !dbg !83
  br i1 %17, label %error, label %bb3, !dbg !83

bb3:                                              ; preds = %bb2
  %18 = load i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !83
  %19 = load i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 1), align 8, !dbg !83
  %20 = sub i32 %19, 1, !dbg !83
  %21 = zext i32 %20 to i64, !dbg !83
  %22 = getelementptr inbounds i8* %18, i64 %21, !dbg !83
  %23 = load i8* %22, align 1, !dbg !83
  %24 = icmp eq i8 %23, 42, !dbg !83
  br i1 %24, label %error, label %bb4, !dbg !83

bb4:                                              ; preds = %bb3
  br label %bb20, !dbg !83

bb5:                                              ; preds = %bb20
  %25 = load i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !84
  %26 = load i32* %i, align 4, !dbg !84
  %27 = sext i32 %26 to i64, !dbg !84
  %28 = getelementptr inbounds i8* %25, i64 %27, !dbg !84
  %29 = load i8* %28, align 1, !dbg !84
  %30 = icmp eq i8 %29, 43, !dbg !84
  br i1 %30, label %bb10, label %bb6, !dbg !84

bb6:                                              ; preds = %bb5
  %31 = load i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !84
  %32 = load i32* %i, align 4, !dbg !84
  %33 = sext i32 %32 to i64, !dbg !84
  %34 = getelementptr inbounds i8* %31, i64 %33, !dbg !84
  %35 = load i8* %34, align 1, !dbg !84
  %36 = icmp eq i8 %35, 42, !dbg !84
  br i1 %36, label %bb10, label %bb7, !dbg !84

bb7:                                              ; preds = %bb6
  store i32 0, i32* %opflag, align 4, !dbg !85
  %37 = load i32* %num, align 4, !dbg !86
  %38 = shl i32 %37, 1, !dbg !86
  store i32 %38, i32* %num, align 4, !dbg !86
  %39 = load i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !87
  %40 = load i32* %i, align 4, !dbg !87
  %41 = sext i32 %40 to i64, !dbg !87
  %42 = getelementptr inbounds i8* %39, i64 %41, !dbg !87
  %43 = load i8* %42, align 1, !dbg !87
  %44 = icmp eq i8 %43, 49, !dbg !87
  br i1 %44, label %bb8, label %bb9, !dbg !87

bb8:                                              ; preds = %bb7
  %45 = load i32* %num, align 4, !dbg !88
  %46 = xor i32 %45, 1, !dbg !88
  store i32 %46, i32* %num, align 4, !dbg !88
  br label %bb9, !dbg !88

bb9:                                              ; preds = %bb8, %bb7
  br label %bb19, !dbg !88

bb10:                                             ; preds = %bb6, %bb5
  %47 = load i32* %opflag, align 4, !dbg !89
  %48 = icmp ne i32 %47, 0, !dbg !89
  br i1 %48, label %error, label %bb11, !dbg !89

bb11:                                             ; preds = %bb10
  %49 = load i32* %num, align 4, !dbg !90
  call void @_ZL7add_resj(i32 %49) nounwind, !dbg !90
  store i32 0, i32* %num, align 4, !dbg !91
  %50 = load i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !92
  %51 = load i32* %i, align 4, !dbg !92
  %52 = sext i32 %51 to i64, !dbg !92
  %53 = getelementptr inbounds i8* %50, i64 %52, !dbg !92
  %54 = load i8* %53, align 1, !dbg !92
  %55 = icmp eq i8 %54, 43, !dbg !92
  br i1 %55, label %bb12, label %bb17, !dbg !92

bb12:                                             ; preds = %bb11
  br label %bb14, !dbg !92

bb13:                                             ; preds = %bb15
  call void @_ZL8apply_opv() nounwind, !dbg !93
  br label %bb14, !dbg !93

bb14:                                             ; preds = %bb13, %bb12
  %56 = load i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !94
  %57 = icmp eq i32 %56, 0, !dbg !94
  br i1 %57, label %bb16, label %bb15, !dbg !94

bb15:                                             ; preds = %bb14
  %58 = load i32** getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 0), align 16, !dbg !94
  %59 = load i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !94
  %60 = sub i32 %59, 1, !dbg !94
  %61 = zext i32 %60 to i64, !dbg !94
  %62 = getelementptr inbounds i32* %58, i64 %61, !dbg !94
  %63 = load i32* %62, align 1, !dbg !94
  %64 = icmp eq i32 %63, 42, !dbg !94
  br i1 %64, label %bb13, label %bb16, !dbg !94

bb16:                                             ; preds = %bb15, %bb14
  call void @_ZL6add_opc(i8 signext 43) nounwind, !dbg !95
  br label %bb18, !dbg !95

bb17:                                             ; preds = %bb11
  call void @_ZL6add_opc(i8 signext 42) nounwind, !dbg !96
  br label %bb18, !dbg !96

bb18:                                             ; preds = %bb17, %bb16
  store i32 1, i32* %opflag, align 4, !dbg !97
  br label %bb19, !dbg !97

bb19:                                             ; preds = %bb18, %bb9
  %65 = load i32* %i, align 4, !dbg !98
  %66 = add nsw i32 %65, 1, !dbg !98
  store i32 %66, i32* %i, align 4, !dbg !98
  br label %bb20, !dbg !98

bb20:                                             ; preds = %bb19, %bb4
  %67 = load i32* %i, align 4, !dbg !98
  %68 = load i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 1), align 8, !dbg !98
  %69 = icmp ult i32 %67, %68, !dbg !98
  br i1 %69, label %bb5, label %bb21, !dbg !98

bb21:                                             ; preds = %bb20
  %70 = load i32* %num, align 4, !dbg !99
  call void @_ZL7add_resj(i32 %70) nounwind, !dbg !99
  br label %bb23, !dbg !99

bb22:                                             ; preds = %bb24
  call void @_ZL8apply_opv() nounwind, !dbg !100
  br label %bb23, !dbg !100

bb23:                                             ; preds = %bb22, %bb21
  %71 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !100
  %72 = icmp ule i32 %71, 1, !dbg !100
  br i1 %72, label %bb25, label %bb24, !dbg !100

bb24:                                             ; preds = %bb23
  %73 = load i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !100
  %74 = icmp ne i32 %73, 0, !dbg !100
  br i1 %74, label %bb22, label %bb25, !dbg !100

bb25:                                             ; preds = %bb24, %bb23
  %75 = load i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !101
  %76 = icmp ne i32 %75, 0, !dbg !101
  br i1 %76, label %error, label %bb26, !dbg !101

bb26:                                             ; preds = %bb25
  %77 = load i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !101
  %78 = icmp ne i32 %77, 1, !dbg !101
  br i1 %78, label %error, label %bb27, !dbg !101

bb27:                                             ; preds = %bb26
  store i32 0, i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 1), align 8, !dbg !102
  store i32 0, i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !102
  store i32 0, i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !102
  %79 = load i32** getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 0), align 16, !dbg !103
  %80 = getelementptr inbounds i32* %79, i64 0, !dbg !103
  %81 = load i32* %80, align 1, !dbg !103
  store i32 %81, i32* %0, align 4, !dbg !103
  br label %bb28, !dbg !103

error:                                            ; preds = %bb26, %bb25, %bb10, %bb3, %bb2, %bb1, %bb, %entry
  store i32 0, i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 1), align 8, !dbg !104
  store i32 0, i32* getelementptr inbounds (%struct.ops* @_ZL3res, i64 0, i32 1), align 8, !dbg !104
  store i32 0, i32* getelementptr inbounds (%struct.ops* @_ZL3ops, i64 0, i32 1), align 8, !dbg !104
  store i32 -1, i32* %0, align 4, !dbg !105
  br label %bb28, !dbg !105

bb28:                                             ; preds = %error, %bb27
  %82 = load i32* %0, align 4, !dbg !103
  store i32 %82, i32* %retval, align 4, !dbg !103
  br label %return, !dbg !103

return:                                           ; preds = %bb28
  %retval29 = load i32* %retval, !dbg !103
  ret i32 %retval29, !dbg !103
}

define internal void @_ZL8add_charc(i8 signext %c) nounwind {
entry:
  %c_addr = alloca i8, align 1
  %"alloca point" = bitcast i32 0 to i32
  call void @llvm.dbg.declare(metadata !{i8* %c_addr}, metadata !106), !dbg !107
  store i8 %c, i8* %c_addr
  %0 = load i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 1), align 8, !dbg !108
  %1 = load i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 2), align 4, !dbg !108
  %2 = icmp uge i32 %0, %1, !dbg !108
  br i1 %2, label %bb, label %bb1, !dbg !108

bb:                                               ; preds = %entry
  %3 = load i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 2), align 4, !dbg !110
  %4 = zext i32 %3 to i64, !dbg !110
  %5 = mul i64 %4, 8, !dbg !110
  %6 = load i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !110
  %7 = call i8* @realloc(i8* %6, i64 %5) nounwind, !dbg !110
  store i8* %7, i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !110
  %8 = load i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 2), align 4, !dbg !111
  %9 = mul i32 %8, 2, !dbg !111
  store i32 %9, i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 2), align 4, !dbg !111
  br label %bb1, !dbg !111

bb1:                                              ; preds = %bb, %entry
  %10 = load i8** getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 0), align 16, !dbg !112
  %11 = load i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 1), align 8, !dbg !112
  %12 = zext i32 %11 to i64, !dbg !112
  %13 = getelementptr inbounds i8* %10, i64 %12, !dbg !112
  %14 = load i8* %c_addr, align 1, !dbg !112
  store i8 %14, i8* %13, align 1, !dbg !112
  %15 = add i32 %11, 1, !dbg !112
  store i32 %15, i32* getelementptr inbounds (%struct.input* @_ZL5input, i64 0, i32 1), align 8, !dbg !112
  br label %return, !dbg !113

return:                                           ; preds = %bb1
  ret void, !dbg !113
}

define void @_ZN8old_calc12mult_pressedEv() nounwind {
entry:
  call void @_ZL8add_charc(i8 signext 42) nounwind, !dbg !114
  br label %return, !dbg !116

return:                                           ; preds = %entry
  ret void, !dbg !116
}

define void @_ZN8old_calc12plus_pressedEv() nounwind {
entry:
  call void @_ZL8add_charc(i8 signext 43) nounwind, !dbg !117
  br label %return, !dbg !119

return:                                           ; preds = %entry
  ret void, !dbg !119
}

define void @_ZN8old_calc11one_pressedEv() nounwind {
entry:
  call void @_ZL8add_charc(i8 signext 49) nounwind, !dbg !120
  br label %return, !dbg !122

return:                                           ; preds = %entry
  ret void, !dbg !122
}

define void @_ZN8old_calc12zero_pressedEv() nounwind {
entry:
  call void @_ZL8add_charc(i8 signext 48) nounwind, !dbg !123
  br label %return, !dbg !125

return:                                           ; preds = %entry
  ret void, !dbg !125
}

declare noalias i8* @malloc(i64) nounwind

declare i32 @printf(i8* noalias, ...)

!llvm.dbg.sp = !{!0, !5, !9, !13, !19, !20, !21, !22, !23, !24}
!llvm.dbg.gv = !{!25, !32, !38}

!0 = metadata !{i32 589870, i32 0, metadata !1, metadata !"apply_op", metadata !"apply_op", metadata !"", metadata !1, i32 65, metadata !3, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_ZL8apply_opv} ; [ DW_TAG_subprogram ]
!1 = metadata !{i32 589865, metadata !"old_calc.cpp", metadata !"/home/tslilyai/Documents/blt/", metadata !2} ; [ DW_TAG_file_type ]
!2 = metadata !{i32 589841, i32 0, i32 4, metadata !"old_calc.cpp", metadata !"/home/tslilyai/Documents/blt/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG_compile_unit ]
!3 = metadata !{i32 589845, metadata !1, metadata !"", metadata !1, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4 = metadata !{null}
!5 = metadata !{i32 589870, i32 0, metadata !1, metadata !"add_op", metadata !"add_op", metadata !"", metadata !1, i32 49, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8)* @_ZL6add_opc} ; [ DW_TAG_subprogram ]
!6 = metadata !{i32 589845, metadata !1, metadata !"", metadata !1, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !7, i32 0, null} ; [ DW_TAG_subroutine_type ]
!7 = metadata !{null, metadata !8}
!8 = metadata !{i32 589860, metadata !1, metadata !"char", metadata !1, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!9 = metadata !{i32 589870, i32 0, metadata !1, metadata !"add_res", metadata !"add_res", metadata !"", metadata !1, i32 57, metadata !10, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32)* @_ZL7add_resj} ; [ DW_TAG_subprogram ]
!10 = metadata !{i32 589845, metadata !1, metadata !"", metadata !1, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !11, i32 0, null} ; [ DW_TAG_subroutine_type ]
!11 = metadata !{null, metadata !12}
!12 = metadata !{i32 589860, metadata !1, metadata !"unsigned int", metadata !1, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!13 = metadata !{i32 589870, i32 0, metadata !14, metadata !"eval_pressed", metadata !"eval_pressed", metadata !"_ZN8old_calc12eval_pressedEv", metadata !1, i32 92, metadata !16, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 ()* @_ZN8old_calc12eval_pressedEv} ; [ DW_TAG_subprogram ]
!14 = metadata !{i32 589881, metadata !1, metadata !"old_calc", metadata !15, i32 4} ; [ DW_TAG_namespace ]
!15 = metadata !{i32 589865, metadata !"old_calc.h", metadata !"/home/tslilyai/Documents/blt/", metadata !2} ; [ DW_TAG_file_type ]
!16 = metadata !{i32 589845, metadata !1, metadata !"", metadata !1, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !17, i32 0, null} ; [ DW_TAG_subroutine_type ]
!17 = metadata !{metadata !18}
!18 = metadata !{i32 589860, metadata !1, metadata !"int", metadata !1, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!19 = metadata !{i32 589870, i32 0, metadata !1, metadata !"add_char", metadata !"add_char", metadata !"", metadata !1, i32 41, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8)* @_ZL8add_charc} ; [ DW_TAG_subprogram ]
!20 = metadata !{i32 589870, i32 0, metadata !14, metadata !"mult_pressed", metadata !"mult_pressed", metadata !"_ZN8old_calc12mult_pressedEv", metadata !1, i32 88, metadata !3, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_ZN8old_calc12mult_pressedEv} ; [ DW_TAG_subprogram ]
!21 = metadata !{i32 589870, i32 0, metadata !14, metadata !"plus_pressed", metadata !"plus_pressed", metadata !"_ZN8old_calc12plus_pressedEv", metadata !1, i32 84, metadata !3, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_ZN8old_calc12plus_pressedEv} ; [ DW_TAG_subprogram ]
!22 = metadata !{i32 589870, i32 0, metadata !14, metadata !"one_pressed", metadata !"one_pressed", metadata !"_ZN8old_calc11one_pressedEv", metadata !1, i32 80, metadata !3, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_ZN8old_calc11one_pressedEv} ; [ DW_TAG_subprogram ]
!23 = metadata !{i32 589870, i32 0, metadata !14, metadata !"zero_pressed", metadata !"zero_pressed", metadata !"_ZN8old_calc12zero_pressedEv", metadata !1, i32 76, metadata !3, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_ZN8old_calc12zero_pressedEv} ; [ DW_TAG_subprogram ]
!24 = metadata !{i32 589870, i32 0, metadata !14, metadata !"init_pressed", metadata !"init_pressed", metadata !"_ZN8old_calc12init_pressedEv", metadata !1, i32 31, metadata !3, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_ZN8old_calc12init_pressedEv} ; [ DW_TAG_subprogram ]
!25 = metadata !{i32 589876, i32 0, metadata !1, metadata !"ops", metadata !"ops", metadata !"", metadata !1, i32 21, metadata !26, i1 true, i1 true, %struct.ops* @_ZL3ops} ; [ DW_TAG_variable ]
!26 = metadata !{i32 589843, metadata !1, metadata !"ops", metadata !1, i32 17, i64 128, i64 64, i64 0, i32 0, null, metadata !27, i32 0, null} ; [ DW_TAG_structure_type ]
!27 = metadata !{metadata !28, metadata !30, metadata !31}
!28 = metadata !{i32 589837, metadata !26, metadata !"buff", metadata !1, i32 18, i64 64, i64 64, i64 0, i32 0, metadata !29} ; [ DW_TAG_member ]
!29 = metadata !{i32 589839, metadata !1, metadata !"", metadata !1, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !12} ; [ DW_TAG_pointer_type ]
!30 = metadata !{i32 589837, metadata !26, metadata !"cur", metadata !1, i32 19, i64 32, i64 32, i64 64, i32 0, metadata !12} ; [ DW_TAG_member ]
!31 = metadata !{i32 589837, metadata !26, metadata !"sz", metadata !1, i32 20, i64 32, i64 32, i64 96, i32 0, metadata !12} ; [ DW_TAG_member ]
!32 = metadata !{i32 589876, i32 0, metadata !1, metadata !"res", metadata !"res", metadata !"", metadata !1, i32 27, metadata !33, i1 true, i1 true, %struct.ops* @_ZL3res} ; [ DW_TAG_variable ]
!33 = metadata !{i32 589843, metadata !1, metadata !"res", metadata !1, i32 23, i64 128, i64 64, i64 0, i32 0, null, metadata !34, i32 0, null} ; [ DW_TAG_structure_type ]
!34 = metadata !{metadata !35, metadata !36, metadata !37}
!35 = metadata !{i32 589837, metadata !33, metadata !"buff", metadata !1, i32 24, i64 64, i64 64, i64 0, i32 0, metadata !29} ; [ DW_TAG_member ]
!36 = metadata !{i32 589837, metadata !33, metadata !"cur", metadata !1, i32 25, i64 32, i64 32, i64 64, i32 0, metadata !12} ; [ DW_TAG_member ]
!37 = metadata !{i32 589837, metadata !33, metadata !"sz", metadata !1, i32 26, i64 32, i64 32, i64 96, i32 0, metadata !12} ; [ DW_TAG_member ]
!38 = metadata !{i32 589876, i32 0, metadata !1, metadata !"input", metadata !"input", metadata !"", metadata !1, i32 15, metadata !39, i1 true, i1 true, %struct.input* @_ZL5input} ; [ DW_TAG_variable ]
!39 = metadata !{i32 589843, metadata !1, metadata !"input", metadata !1, i32 11, i64 128, i64 64, i64 0, i32 0, null, metadata !40, i32 0, null} ; [ DW_TAG_structure_type ]
!40 = metadata !{metadata !41, metadata !43, metadata !44}
!41 = metadata !{i32 589837, metadata !39, metadata !"buff", metadata !1, i32 12, i64 64, i64 64, i64 0, i32 0, metadata !42} ; [ DW_TAG_member ]
!42 = metadata !{i32 589839, metadata !1, metadata !"", metadata !1, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !8} ; [ DW_TAG_pointer_type ]
!43 = metadata !{i32 589837, metadata !39, metadata !"cur", metadata !1, i32 13, i64 32, i64 32, i64 64, i32 0, metadata !12} ; [ DW_TAG_member ]
!44 = metadata !{i32 589837, metadata !39, metadata !"sz", metadata !1, i32 14, i64 32, i64 32, i64 96, i32 0, metadata !12} ; [ DW_TAG_member ]
!45 = metadata !{i32 32, i32 0, metadata !46, null}
!46 = metadata !{i32 589835, metadata !24, i32 31, i32 0, metadata !1, i32 10} ; [ DW_TAG_lexical_block ]
!47 = metadata !{i32 33, i32 0, metadata !46, null}
!48 = metadata !{i32 34, i32 0, metadata !46, null}
!49 = metadata !{i32 35, i32 0, metadata !46, null}
!50 = metadata !{i32 36, i32 0, metadata !46, null}
!51 = metadata !{i32 37, i32 0, metadata !46, null}
!52 = metadata !{i32 38, i32 0, metadata !46, null}
!53 = metadata !{i32 39, i32 0, metadata !46, null}
!54 = metadata !{i32 66, i32 0, metadata !55, null}
!55 = metadata !{i32 589835, metadata !0, i32 65, i32 0, metadata !1, i32 0} ; [ DW_TAG_lexical_block ]
!56 = metadata !{i32 67, i32 0, metadata !55, null}
!57 = metadata !{i32 69, i32 0, metadata !55, null}
!58 = metadata !{i32 70, i32 0, metadata !55, null}
!59 = metadata !{i32 71, i32 0, metadata !55, null}
!60 = metadata !{i32 72, i32 0, metadata !55, null}
!61 = metadata !{i32 590081, metadata !5, metadata !"c", metadata !1, i32 49, metadata !8, i32 0} ; [ DW_TAG_arg_variable ]
!62 = metadata !{i32 49, i32 0, metadata !5, null}
!63 = metadata !{i32 50, i32 0, metadata !64, null}
!64 = metadata !{i32 589835, metadata !5, i32 49, i32 0, metadata !1, i32 1} ; [ DW_TAG_lexical_block ]
!65 = metadata !{i32 51, i32 0, metadata !64, null}
!66 = metadata !{i32 52, i32 0, metadata !64, null}
!67 = metadata !{i32 54, i32 0, metadata !64, null}
!68 = metadata !{i32 55, i32 0, metadata !64, null}
!69 = metadata !{i32 590081, metadata !9, metadata !"n", metadata !1, i32 57, metadata !12, i32 0} ; [ DW_TAG_arg_variable ]
!70 = metadata !{i32 57, i32 0, metadata !9, null}
!71 = metadata !{i32 58, i32 0, metadata !72, null}
!72 = metadata !{i32 589835, metadata !9, i32 57, i32 0, metadata !1, i32 2} ; [ DW_TAG_lexical_block ]
!73 = metadata !{i32 59, i32 0, metadata !72, null}
!74 = metadata !{i32 60, i32 0, metadata !72, null}
!75 = metadata !{i32 62, i32 0, metadata !72, null}
!76 = metadata !{i32 63, i32 0, metadata !72, null}
!77 = metadata !{i32 590080, metadata !78, metadata !"i", metadata !1, i32 93, metadata !18, i32 0} ; [ DW_TAG_auto_variable ]
!78 = metadata !{i32 589835, metadata !79, i32 93, i32 0, metadata !1, i32 4} ; [ DW_TAG_lexical_block ]
!79 = metadata !{i32 589835, metadata !13, i32 92, i32 0, metadata !1, i32 3} ; [ DW_TAG_lexical_block ]
!80 = metadata !{i32 93, i32 0, metadata !78, null}
!81 = metadata !{i32 590080, metadata !78, metadata !"num", metadata !1, i32 93, metadata !18, i32 0} ; [ DW_TAG_auto_variable ]
!82 = metadata !{i32 590080, metadata !78, metadata !"opflag", metadata !1, i32 93, metadata !18, i32 0} ; [ DW_TAG_auto_variable ]
!83 = metadata !{i32 94, i32 0, metadata !78, null}
!84 = metadata !{i32 97, i32 0, metadata !78, null}
!85 = metadata !{i32 98, i32 0, metadata !78, null}
!86 = metadata !{i32 99, i32 0, metadata !78, null}
!87 = metadata !{i32 100, i32 0, metadata !78, null}
!88 = metadata !{i32 101, i32 0, metadata !78, null}
!89 = metadata !{i32 104, i32 0, metadata !78, null}
!90 = metadata !{i32 105, i32 0, metadata !78, null}
!91 = metadata !{i32 106, i32 0, metadata !78, null}
!92 = metadata !{i32 107, i32 0, metadata !78, null}
!93 = metadata !{i32 109, i32 0, metadata !78, null}
!94 = metadata !{i32 108, i32 0, metadata !78, null}
!95 = metadata !{i32 110, i32 0, metadata !78, null}
!96 = metadata !{i32 112, i32 0, metadata !78, null}
!97 = metadata !{i32 113, i32 0, metadata !78, null}
!98 = metadata !{i32 96, i32 0, metadata !78, null}
!99 = metadata !{i32 116, i32 0, metadata !78, null}
!100 = metadata !{i32 118, i32 0, metadata !78, null}
!101 = metadata !{i32 119, i32 0, metadata !78, null}
!102 = metadata !{i32 123, i32 0, metadata !78, null}
!103 = metadata !{i32 124, i32 0, metadata !78, null}
!104 = metadata !{i32 127, i32 0, metadata !78, null}
!105 = metadata !{i32 128, i32 0, metadata !78, null}
!106 = metadata !{i32 590081, metadata !19, metadata !"c", metadata !1, i32 41, metadata !8, i32 0} ; [ DW_TAG_arg_variable ]
!107 = metadata !{i32 41, i32 0, metadata !19, null}
!108 = metadata !{i32 42, i32 0, metadata !109, null}
!109 = metadata !{i32 589835, metadata !19, i32 41, i32 0, metadata !1, i32 5} ; [ DW_TAG_lexical_block ]
!110 = metadata !{i32 43, i32 0, metadata !109, null}
!111 = metadata !{i32 44, i32 0, metadata !109, null}
!112 = metadata !{i32 46, i32 0, metadata !109, null}
!113 = metadata !{i32 47, i32 0, metadata !109, null}
!114 = metadata !{i32 89, i32 0, metadata !115, null}
!115 = metadata !{i32 589835, metadata !20, i32 88, i32 0, metadata !1, i32 6} ; [ DW_TAG_lexical_block ]
!116 = metadata !{i32 90, i32 0, metadata !115, null}
!117 = metadata !{i32 85, i32 0, metadata !118, null}
!118 = metadata !{i32 589835, metadata !21, i32 84, i32 0, metadata !1, i32 7} ; [ DW_TAG_lexical_block ]
!119 = metadata !{i32 86, i32 0, metadata !118, null}
!120 = metadata !{i32 81, i32 0, metadata !121, null}
!121 = metadata !{i32 589835, metadata !22, i32 80, i32 0, metadata !1, i32 8} ; [ DW_TAG_lexical_block ]
!122 = metadata !{i32 82, i32 0, metadata !121, null}
!123 = metadata !{i32 77, i32 0, metadata !124, null}
!124 = metadata !{i32 589835, metadata !23, i32 76, i32 0, metadata !1, i32 9} ; [ DW_TAG_lexical_block ]
!125 = metadata !{i32 78, i32 0, metadata !124, null}
